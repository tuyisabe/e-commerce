rules_version = '2';

// Craft rules based on your security requirements
service firebase.storage {
  match /b/{bucket}/o {
    match /products/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null 
        && request.resource.size < 5 * 1024 * 1024 // 5MB
        && request.resource.contentType.matches('image/.*')
        && (
          get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
        );
    }
    
    match /users/{userId}/{allPaths=**} {
      allow read: if request.auth != null && (
        request.auth.uid == userId || 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
      );
      allow write: if request.auth != null && (
        request.auth.uid == userId ||
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin'
      ) 
      && request.resource.size < 5 * 1024 * 1024 // 5MB
      && request.resource.contentType.matches('image/.*');
    }
    
    match /uploads/{userId}/{allPaths=**} {
      allow read: if true;
      allow write: if request.auth != null && 
        request.auth.uid == userId &&
        request.resource.size < 5 * 1024 * 1024 && // 5MB
        request.resource.contentType.matches('image/.*');
    }
    
    match /{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (request.auth.token.role == 'admin' || 
        get(/databases/$(database.instance)/documents/users/$(request.auth.uid)).data.role == 'admin');
    }
  }
}
